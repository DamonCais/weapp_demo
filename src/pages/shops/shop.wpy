<template>
  <view>
    <view class="bg-white pv-20 shop-header">
      <jvc-media
        title="{{equipmen.EquipmentName}}"
        address="{{equipmen.Address}}"
        distance="{{equipmen.Services}}"
        thumb="{{equipmen.Logo}}"
      ></jvc-media>
      <button @tap="tapLocation" class="shop-header-btn">导航</button>
    </view>
    <wux-cell @click="tapShowShopList" title="查看附近可用充电柜" is-link></wux-cell>
    <wux-cell-group title="我要换电">
      <view class="p-20 mb-20">
        <wux-media
          thumb="http://mp.jycais.cn/uploadDir/upload_c7d9e05d3e3723353ee6afed758c4bc1.jpg"
        >
          <view class="flex justify-space-between column pv-20">
            <view class="c000">我的电池码：{{productCode||'暂无使用电池'}}</view>
            <!-- <view class="c333">电瓶参数：48V</view> -->
          </view>
        </wux-media>
      </view>
    </wux-cell-group>
    <wux-cell-group title="充电柜">
      <wux-cell title="扫描充电柜二维码进入换电页面" @click="tapScan" is-link></wux-cell>
      <view class="flex justify-flex-start border-box p-20 wrap">
        <jvc-button
          data-index="{{index}}"
          wx:for="{{_switch}}"
          class="box pv-20 flex align-center text-center border-box"
          disabled="{{!item}}"
          outline
          block
          type="{{item.type}}"
        >
          <view class="flex column justify-center align-center ph-20 border-box lh-40">
            <wux-icon type="{{item.icon}}"/>
            <!-- <wux-icon
              type="{{item==2?'ios-battery-full':item==1?'ios-battery-charging':'ios-square-outline'}}"
            />-->
            <text class="fs-24">{{item.PartitionWallID}}号</text>
            <text class="fs-36">{{item.text}}</text>
          </view>
        </jvc-button>
      </view>
    </wux-cell-group>
    <wux-popup
      bind:close="popClose"
      maskClosable="{{false}}"
      position="bottom"
      closable
      visible="{{ shopListPop }}"
      content="请选择最近的充电柜"
    >
      <view slot="header" class="p-20">当前设备无可换电池</view>
      <view class="mb-20">
        <wux-cell
          @click="tapShop"
          data-id="{{equipmen.EqmUID}}"
          title="{{equipmen.EquipmentName}}"
          extra="{{equipmen.Address}}"
          is-link
        ></wux-cell>
        <wux-cell
          @click="tapShop"
          data-id="{{equipmen.EqmUID}}"
          title="{{equipmen.EquipmentName}}"
          extra="{{equipmen.Address}}"
          is-link
        ></wux-cell>
      </view>
    </wux-popup>
  </view>
</template>

<script>
import wepy from 'wepy';
import tip from '@/utils/tip';
import api from '@/api/api';

export default class shop extends wepy.page {
  config = {
    navigationBarTitleText: '营业点',
    usingComponents: {
      'wux-popup': '../../wux/popup/index',
      'wux-button': '../../wux/button/index',
      'wux-icon': '../../wux/icon/index',
      'wux-badge': '../../wux/badge/index',
      'wux-card': '../../wux/card/index',
      'wux-cell-group': '../../wux/cell-group/index',
      'wux-cell': '../../wux/cell/index',
      'wux-search-bar': '../../wux/search-bar/index',
      'wux-popover': '../../wux/popover/index',
      'wux-media': '../../wux/media/index',
      'jvc-media': '../../wux/jvc_media/index',
      'jvc-button': '../../iview/jvc_button/index'
    }
  };
  components = {};

  data = {
    userSpecialInfo: null,

    productCode: 'abc123',
    eqmUID: 0,
    equipmen: {},
    shop: {},
    // status: [0, 1, 2, 1, 2, 0, 1, 1, 2, 2],
    location: {},
    shopListPop: false,
    _switch: [],
    useTesting: true
  };

  computed = {};

  methods = {
    tapShop(e) {
      console.log(e);
      let { id } = e.currentTarget.dataset;
      wepy.navigateTo({ url: '/pages/shops/shop?id=' + id });
    },
    popClose() {
      this.shopListPop = false;
    },
    tapShowShopList(e) {
      this.shopListPop = true;
    },
    async tapScan(e) {
      try {
        let res = await wepy.scanCode({
          onlyFromCamera: false //是否只能从相机扫码，不允许从相册选择图片,
        });
        if (this.useTesting) {
          await tip.tips('当前充电柜正在使用中，请稍后！');
          this.useTesting = false;
        } else {
          wepy.navigateTo({
            url: `/pages/battery/batteryInfo?productCode=${
              this.productCode
            }&eqmUID=${this.eqmUID}`
          });
        }
      } catch (error) {
        console.log(error);
      }
    },
    tapBattery(e) {
      let { index } = e.currentTarget.dataset;
      console.log(index);
      wepy.navigateTo({
        url: `/pages/battery/batteryInfo?productCode=${
          this.productCode
        }&eqmUID=${this.eqmUID}`
      });
    },
    tapLeague(e) {
      wepy.switchTab({ url: '/pages/league/index' });
    },
    async tapLocation(e) {
      try {
        let res = await wepy.openLocation({
          latitude: this.equipmen.Latitude, //纬度，范围为-90~90，负数表示南纬,
          longitude: this.equipmen.Longitude, //经度，范围为-180~180，负数表示西经,
          scale: 15, //缩放比例，范围5~18,
          name: this.equipmen.EquipmentName, //位置名,
          address: this.equipmen.Address //地址的详细说明,
        });
        this.$apply();
      } catch (error) {}
    }
  };

  events = {};

  async onLoad(option) {
    this.userSpecialInfo = this.$parent.userSpecialInfo;
    console.log(this.userSpecialInfo);
    this.eqmUID = option.id;
    this.location = this.$parent.location;
    await this.getEQMDetail();
    // this.shopListPop = true;
    this.$apply();
  }
  async getEQMDetail() {
    tip.loading();
    let obj = {
      EqmUID: this.eqmUID,
      MemberCode: this.userSpecialInfo.user_Infor.MemberCode
    };
    let res = await api.get(`/EQM/GetEQMDetail`, obj);
    this.equipmen = res.data.entity.equipmen;
    this.shop = res.data.entity.shop;
    this.productCode = res.data.entity.productCode;
    let _switch = res.data.entity._switch;
    let arr = [
      {
        text: '不可用',
        icon: 'md-battery-charging',
        type: 'error'
      },
      {
        text: '可用',
        icon: 'md-battery-full',
        type: 'my-battery'
      },
      {
        text: '空单元',
        icon: 'md-square-outline',
        type: 'default'
      },
      {
        text: '异常单元',
        icon: 'md-warning',
        type: 'warning'
      }
    ];
    _switch.map(item => {
      item.text = arr[item.Switch].text;
      item.icon = arr[item.Switch].icon;
      item.type = arr[item.Switch].type;
    });
    this._switch = _switch;

    wepy.setNavigationBarTitle({ title: this.shop.ShopName });
    tip.loaded();
  }
}
</script>

<style lang="less">
.box {
  flex-basis: 50%;
  padding: 10rpx 20rpx;
  // border: 1px solid #999;
}
.shop-header {
  position: relative;
  .shop-header-btn {
    position: absolute;
    right: 10rpx;
    top: 20rpx;
    line-height: 30rpx;
    padding: 5rpx 30rpx;
    border-radius: 20rpx;
    font-size: 24rpx;
    background: #444;
    color: #eee;
  }
}
</style>
